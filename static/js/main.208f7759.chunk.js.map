{"version":3,"sources":["scroll.js","searchbox.js","cards.js","cardList.js","Errorboundry.js","App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","border","height","children","Searchbox","onsearchchanged","className","type","placeholder","onChange","Cards","id","name","email","username","alt","src","CardList","robots","Cardlistcomponent","map","user","i","ErrorBoundry","state","haserror","error","info","this","setState","Component","App","event","Searchfiels","target","value","fetch","then","Response","json","filterrobots","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAeeA,EAXD,SAACC,GAEf,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAjE,SACMJ,EAAMK,YCWDC,G,KAhBC,SAAC,GAChB,IADiBC,EAClB,EADkBA,gBAGd,OACC,qBAAKC,UAAU,MAAf,SACE,uBAAOA,UAAU,uCACjBC,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,QCU5CK,EAhBH,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,GAAGC,EAAuB,EAAvBA,KAAKC,EAAkB,EAAlBA,MAAkB,EAAZC,SAE5B,OACA,sBAAKR,UAAU,kDAAf,UAEA,qBAAKS,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACA,6BAAKC,IACL,4BAAIC,WCQWI,EAfA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACPC,EAAkBD,EAAOE,KAAI,SAACC,EAAKC,GACrC,OAAO,cAAC,EAAD,CAAeX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,MAAOC,SAAUI,EAAOI,GAAGR,UAAvFQ,MAG3B,OACA,8BACKH,KCgBUI,E,kDAvBf,WAAYzB,GAAO,IAAD,8BAClB,cAAMA,IACD0B,MACL,CACIC,UAAS,GAJK,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAI5B,WACW,OAAGG,KAAKJ,MAAMC,SAEN,6DAGDG,KAAK9B,MAAMK,a,GAnBF2B,aCqEZC,E,kDA5DZ,aAAc,IAAD,8BACX,gBAeF1B,gBAAgB,SAAC2B,GACf,EAAKH,SAAS,CAACI,YAAYD,EAAME,OAAOC,SAfxC,EAAKX,MAAM,CACTN,OAAO,GACPe,YAAY,IAJH,E,qDAOb,WACC,IAAD,OACEG,MAAM,8CAA8CC,MAAK,SAAAC,GACvD,OAAOA,EAASC,UAEjBF,MAAK,SAAAhB,GACJ,EAAKQ,SAAS,CAACX,OAAOG,S,oBAO1B,WAAS,IAAD,OACDmB,EAAaZ,KAAKJ,MAAMN,OAAOuB,QAAO,SAAAvB,GAC1C,OAAOA,EAAON,KAAK8B,cAAcC,SAAS,EAAKnB,MAAMS,YAAYS,kBAEjE,OAAuB,GAApBd,KAAKJ,MAAMN,OACL,oBAAIZ,UAAU,KAAd,0CAIW,GAAfkC,EAGC,sBAAKlC,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,yBACC,cAAC,EAAD,CAAWD,gBAAiBuB,KAAKvB,kBACjC,+BAAKuB,KAAKJ,MAAMS,YAAhB,qBAON,sBAAK3B,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,yBACC,cAAC,EAAD,CAAWD,gBAAiBuB,KAAKvB,kBACjC,cAAC,EAAD,UACE,cAAC,EAAD,UAAc,cAAC,EAAD,CAAUa,OAAQsB,e,GAhDrBV,aCEJc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.208f7759.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Scroll =(props)=>\r\n{\r\nreturn(\r\n    <div style={{overflowY:'scroll' ,border:'2px solid black',height:'800px',}}>\r\n         {props.children}\r\n    </div>\r\n   \r\n\r\n);\r\n\r\n}\r\nexport default Scroll","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Searchbox=({onsearchchanged})=>\r\n{\r\n\r\n    return(\r\n     <div className='pa3'>\r\n       <input className='bg-lightest-blue pa3 ba b--green  tc'\r\n       type='search' placeholder='search robots' onChange={onsearchchanged} />\r\n\r\n\r\n     </div>\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\nexport default Searchbox;","import React from 'react';\r\n\r\n\r\nconst Cards=({id,name,email,username})=>{\r\n\r\nreturn(\r\n<div className=\"bg-light-green dib br3 pa3 ma3 grow shadow-5 tc\">\r\n   \r\n<img alt='robots' src={`https://robohash.org/${id}?100x100`} />\r\n<div>\r\n<h2>{name}</h2>\r\n<p>{email}</p>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n);\r\n}\r\nexport default Cards;","import React from 'react';\r\nimport Cards from './cards';\r\n\r\n\r\nconst CardList=({robots})=>{\r\n    const Cardlistcomponent=robots.map((user,i)=>{\r\n        return <Cards key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} username={robots[i].username}/>\r\n    })\r\n\r\nreturn(\r\n<div>\r\n    {Cardlistcomponent}\r\n</div>\r\n\r\n\r\n);\r\n\r\n\r\n}\r\nexport default CardList;","import React,{Component} from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\nconstructor(props){\r\nsuper(props);\r\nthis.state=\r\n{\r\n    haserror:false\r\n}\r\n}\r\ncomponentDidCatch(error,info){\r\n    this.setState({haserror:true});\r\n\r\n\r\n}\r\nrender(){\r\n           if(this.state.haserror){\r\n               return(\r\n                   <h2>OOPs something went wrong!!</h2>\r\n               );\r\n           }\r\n           return this.props.children;\r\n}\r\n\r\n\r\n}\r\nexport default ErrorBoundry;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n// import {robots} from './robots'\nimport Scroll from './scroll'\nimport 'tachyons';\nimport Searchbox from './searchbox';\nimport CardList from './cardList';\nimport ErrorBoundry from './Errorboundry';\n\nclass App  extends Component\n {\n   constructor(){\n     super()\n     this.state={\n       robots:[],\n       Searchfiels:''\n     }\n   }\n   componentDidMount()\n   {\n     fetch(\"https://jsonplaceholder.typicode.com/users\").then(Response=>{\n       return Response.json();\n     })\n     .then(user=>{\n       this.setState({robots:user});\n     })\n   }\n   onsearchchanged=(event)=>{\n     this.setState({Searchfiels:event.target.value})\n    \n   }\n   render(){\n    const filterrobots=this.state.robots.filter(robots=>{\n      return robots.name.toLowerCase().includes(this.state.Searchfiels.toLowerCase());\n      })\n      if(this.state.robots ==0){\n        return(<h2 className='tc'>LOading the content pls wait</h2>);\n      }\n      else{\n\n        if(filterrobots== 0){\n          return (\n    \n            <div className='tc'>\n           <h1 className='f1'>RoboFriends</h1>\n            <Searchbox onsearchchanged={this.onsearchchanged}/> \n            <h2>{this.state.Searchfiels} not found !</h2>\n        \n           </div>\n                );\n        }\n          else { return (\n    \n      <div className='tc'>\n     <h1 className='f1'>RoboFriends</h1>\n      <Searchbox onsearchchanged={this.onsearchchanged}/> \n      <Scroll>\n        <ErrorBoundry><CardList robots={filterrobots}/></ErrorBoundry>\n        </Scroll>\n      \n  \n     </div>\n          );\n    }\n  \n      }\n    \n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nReactDOM.render(\n  <App/>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}